import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import './Auth.css'

const AuthPage = () => {
  const [isLogin, setIsLogin] = useState(true)
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    confirmPassword: '',
    username: '',
  })
  const navigate = useNavigate()

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    })
  }

  const handleSubmit = (e) => {
    e.preventDefault()

    if (!isLogin && formData.password !== formData.confirmPassword) {
      alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!')
      return
    }

    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö:', {
      email: formData.email,
      password: formData.password,
      username: formData.username,
    })

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /home –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    navigate('/home')

    setFormData({
      email: '',
      password: '',
      confirmPassword: '',
      username: '',
    })
  }

  return (
    <div className="auth-page">
      {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è */}
      <div className="auth-hero">
        <div className="hero-content">
          <div className="logo">
            <div className="logo-icon">‚ö°</div>
            <h1>Purse</h1>
          </div>
          <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ</h2>
          <p>
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–∞—à
            —Å–µ—Ä–≤–∏—Å
          </p>
          <div className="features">
            <div className="feature">
              <span className="feature-icon">üîí</span>
              <span>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</span>
            </div>
            <div className="feature">
              <span className="feature-icon">‚ö°</span>
              <span>–°–∫–æ—Ä–æ—Å—Ç—å</span>
            </div>
            <div className="feature">
              <span className="feature-icon">üéØ</span>
              <span>–ü—Ä–æ—Å—Ç–æ—Ç–∞</span>
            </div>
          </div>
        </div>
        <div className="floating-elements">
          <div className="floating-circle circle-1"></div>
          <div className="floating-circle circle-2"></div>
          <div className="floating-circle circle-3"></div>
        </div>
      </div>

      {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Ñ–æ—Ä–º–∞ */}
      <div className="auth-section">
        <div className="auth-container">
          <div className="auth-card">
            <div className="auth-header">
              <h2>{isLogin ? '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}</h2>
              <p className="auth-subtitle">
                {isLogin
                  ? '–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç'
                  : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'}
              </p>
            </div>

            <form onSubmit={handleSubmit} className="auth-form">
              {!isLogin && (
                <div className="form-group">
                  <label htmlFor="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
                  <input
                    type="text"
                    id="username"
                    name="username"
                    value={formData.username}
                    onChange={handleChange}
                    required={!isLogin}
                    placeholder="–í–∞—à–µ –∏–º—è"
                    className="modern-input"
                  />
                </div>
              )}

              <div className="form-group">
                <label htmlFor="email">Email</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  required
                  placeholder="your@email.com"
                  className="modern-input"
                />
              </div>

              <div className="form-group">
                <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  id="password"
                  name="password"
                  value={formData.password}
                  onChange={handleChange}
                  required
                  placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
                  minLength="6"
                  className="modern-input"
                />
              </div>

              {!isLogin && (
                <div className="form-group">
                  <label htmlFor="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                  <input
                    type="password"
                    id="confirmPassword"
                    name="confirmPassword"
                    value={formData.confirmPassword}
                    onChange={handleChange}
                    required={!isLogin}
                    placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    minLength="6"
                    className="modern-input"
                  />
                </div>
              )}

              {isLogin && (
                <div className="form-options">
                  <label className="checkbox-label">
                    <input type="checkbox" />
                    <span className="checkmark"></span>
                    –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è
                  </label>
                  <a href="#forgot" className="forgot-link">
                    –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                  </a>
                </div>
              )}

              <button type="submit" className="submit-btn modern-btn">
                {isLogin ? '–í–æ–π—Ç–∏' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
              </button>
            </form>

            <div className="auth-switch">
              <p>
                {isLogin ? '–ï—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?' : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?'}{' '}
                <button
                  className="switch-link"
                  onClick={() => setIsLogin(!isLogin)}
                >
                  {isLogin ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–í–æ–π—Ç–∏'}
                </button>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default AuthPage
